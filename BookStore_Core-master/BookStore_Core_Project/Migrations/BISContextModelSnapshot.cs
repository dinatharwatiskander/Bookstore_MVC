// <auto-generated />
using System;
using BookStore_Core_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore_Core_Project.Migrations
{
    [DbContext(typeof(BISContext))]
    partial class BISContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStore_Core_Project.Models.Author", b =>
                {
                    b.Property<int>("authorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("authorID");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Books", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("CustomerID");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Quantity");

                    b.HasKey("BookID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Enrollment", b =>
                {
                    b.Property<int>("CustomerID");

                    b.Property<int>("BookID");

                    b.HasKey("CustomerID", "BookID");

                    b.HasIndex("BookID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Publisher", b =>
                {
                    b.Property<int>("publisherID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BooksBookID");

                    b.Property<int>("Name");

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("publisherID");

                    b.HasIndex("BooksBookID");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Books", b =>
                {
                    b.HasOne("BookStore_Core_Project.Models.Customer")
                        .WithMany("books")
                        .HasForeignKey("CustomerID");
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Enrollment", b =>
                {
                    b.HasOne("BookStore_Core_Project.Models.Books", "_Book")
                        .WithMany("Customerlist")
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BookStore_Core_Project.Models.Customer", "_Customer")
                        .WithMany("Booklist")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BookStore_Core_Project.Models.Publisher", b =>
                {
                    b.HasOne("BookStore_Core_Project.Models.Books")
                        .WithMany("publishers")
                        .HasForeignKey("BooksBookID");
                });
#pragma warning restore 612, 618
        }
    }
}
